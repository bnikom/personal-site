{"ast":null,"code":"import _objectWithoutProperties from\"/Users/bnikom/Sites/personal-site/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/Users/bnikom/Sites/personal-site/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import ReactMapGL,{NavigationControl,Marker,Popup}from'react-map-gl';import uuidv1 from'uuid/v1';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import mapData from'../mapData';var INITIAL_VIEWPORT={latitude:37.61859557982719,longitude:-2.0274437500523406,zoom:1};var TravelMap=function TravelMap(){var _useState=useState(INITIAL_VIEWPORT),_useState2=_slicedToArray(_useState,2),viewport=_useState2[0],setViewport=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showPopup=_useState4[0],setShowPopup=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),pin=_useState6[0],setPin=_useState6[1];var handleMapClick=function handleMapClick(_ref){var lngLat=_ref.lngLat,leftButton=_ref.leftButton;if(!leftButton)return;};return React.createElement(\"main\",null,React.createElement(ReactMapGL,Object.assign({width:\"100%\"// height=\"calc(100vh - 64px)\"\n,height:\"80vh\",mapStyle:\"mapbox://styles/mapbox/streets-v9\",mapboxApiAccessToken:\"pk.eyJ1IjoiYm5pa29tIiwiYSI6ImNrMHNxbjgwNjAxN2MzbnBlZXNnZ3Rtc2gifQ.PQbU0Gc9uGPX90rMxbJcaw\",onViewportChange:function onViewportChange(_ref2){var width=_ref2.width,height=_ref2.height,etc=_objectWithoutProperties(_ref2,[\"width\",\"height\"]);return setViewport(etc);},onClick:handleMapClick/* scrollZoom={!mobileSize} */},viewport),React.createElement(\"div\",{className:\"navigation-control\"},React.createElement(NavigationControl,{onViewportChange:function onViewportChange(viewport){return setViewport(viewport);}})),mapData.map(function(pin){return React.createElement(Marker,{key:uuidv1(),latitude:pin.latitude,longitude:pin.longitude,offsetLeft:-10,offsetTop:-30},React.createElement(FontAwesomeIcon,{icon:\"map-pin\",size:\"2x\",color:\"red\",onClick:function onClick(){setPin(pin);setShowPopup(true);},style:{cursor:'pointer'}}));}),showPopup&&React.createElement(Popup,{latitude:pin.latitude,longitude:pin.longitude,closeButton:true,closeOnClick:false,onClose:function onClose(){return setShowPopup(false);},anchor:\"top\"},React.createElement(\"div\",null,React.createElement(\"p\",null,pin.city,\", \",pin.country),React.createElement(\"img\",{src:pin.image,className:\"travel-img\",alt:\"\".concat(pin.city,\", \").concat(pin.country)}),React.createElement(\"p\",null,pin.comments)))));};export default TravelMap;","map":{"version":3,"sources":["/Users/bnikom/Sites/personal-site/client/src/components/TravelMap.jsx"],"names":["React","useState","ReactMapGL","NavigationControl","Marker","Popup","uuidv1","FontAwesomeIcon","mapData","INITIAL_VIEWPORT","latitude","longitude","zoom","TravelMap","viewport","setViewport","showPopup","setShowPopup","pin","setPin","handleMapClick","lngLat","leftButton","width","height","etc","map","cursor","city","country","image","comments"],"mappings":"0QAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,EAAqBC,iBAArB,CAAwCC,MAAxC,CAAgDC,KAAhD,KAA6D,cAA7D,CACA,MAAOC,CAAAA,MAAP,KAAmB,SAAnB,CAEA,OAASC,eAAT,KAAgC,gCAAhC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACvBC,QAAQ,CAAE,iBADa,CAEvBC,SAAS,CAAE,CAAC,kBAFW,CAGvBC,IAAI,CAAE,CAHiB,CAAzB,CAMA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,eACUZ,QAAQ,CAACQ,gBAAD,CADlB,wCACfK,QADe,eACLC,WADK,8BAEYd,QAAQ,CAAC,KAAD,CAFpB,yCAEfe,SAFe,eAEJC,YAFI,8BAGAhB,QAAQ,CAAC,IAAD,CAHR,yCAGfiB,GAHe,eAGVC,MAHU,eAKtB,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA4B,IAAzBC,CAAAA,MAAyB,MAAzBA,MAAyB,CAAjBC,UAAiB,MAAjBA,UAAiB,CACjD,GAAI,CAACA,UAAL,CAAiB,OAClB,CAFD,CAIA,MACE,iCACE,oBAAC,UAAD,gBACE,KAAK,CAAC,MACN;AAFF,CAGE,MAAM,CAAC,MAHT,CAIE,QAAQ,CAAC,mCAJX,CAKE,oBAAoB,CAAC,0FALvB,CAME,gBAAgB,CAAE,oCAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUC,MAAV,OAAUA,MAAV,CAAqBC,GAArB,0DAA8BV,CAAAA,WAAW,CAACU,GAAD,CAAzC,EANpB,CAOE,OAAO,CAAEL,cACT,8BARF,EASMN,QATN,EAWE,2BAAK,SAAS,CAAC,oBAAf,EACE,oBAAC,iBAAD,EACE,gBAAgB,CAAE,0BAAAA,QAAQ,QAAIC,CAAAA,WAAW,CAACD,QAAD,CAAf,EAD5B,EADF,CAXF,CAgBGN,OAAO,CAACkB,GAAR,CAAY,SAAAR,GAAG,QACd,qBAAC,MAAD,EACE,GAAG,CAAEZ,MAAM,EADb,CAEE,QAAQ,CAAEY,GAAG,CAACR,QAFhB,CAGE,SAAS,CAAEQ,GAAG,CAACP,SAHjB,CAIE,UAAU,CAAE,CAAC,EAJf,CAKE,SAAS,CAAE,CAAC,EALd,EAOE,oBAAC,eAAD,EACE,IAAI,CAAC,SADP,CAEE,IAAI,CAAE,IAFR,CAGE,KAAK,CAAE,KAHT,CAIE,OAAO,CAAE,kBAAM,CAAEQ,MAAM,CAACD,GAAD,CAAN,CAAaD,YAAY,CAAC,IAAD,CAAZ,CAAmB,CAJnD,CAKE,KAAK,CAAE,CAAEU,MAAM,CAAE,SAAV,CALT,EAPF,CADc,EAAf,CAhBH,CAkCGX,SAAS,EACR,oBAAC,KAAD,EACE,QAAQ,CAAEE,GAAG,CAACR,QADhB,CAEE,SAAS,CAAEQ,GAAG,CAACP,SAFjB,CAGE,WAAW,CAAE,IAHf,CAIE,YAAY,CAAE,KAJhB,CAKE,OAAO,CAAE,yBAAMM,CAAAA,YAAY,CAAC,KAAD,CAAlB,EALX,CAME,MAAM,CAAC,KANT,EAQE,+BACE,6BAAIC,GAAG,CAACU,IAAR,MAAgBV,GAAG,CAACW,OAApB,CADF,CAEE,2BACE,GAAG,CAAEX,GAAG,CAACY,KADX,CAEE,SAAS,CAAC,YAFZ,CAGE,GAAG,WAAKZ,GAAG,CAACU,IAAT,cAAkBV,GAAG,CAACW,OAAtB,CAHL,EAFF,CAOE,6BAAIX,GAAG,CAACa,QAAR,CAPF,CARF,CAnCJ,CADF,CADF,CA6DD,CAtED,CAwEA,cAAelB,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactMapGL, { NavigationControl, Marker, Popup } from 'react-map-gl';\nimport uuidv1 from 'uuid/v1';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport mapData from '../mapData';\n\nconst INITIAL_VIEWPORT = {\n  latitude: 37.61859557982719,\n  longitude: -2.0274437500523406,\n  zoom: 1,\n}\n\nconst TravelMap = () => {\n  const [viewport, setViewport] = useState(INITIAL_VIEWPORT);\n  const [showPopup, setShowPopup] = useState(false);\n  const [pin, setPin] = useState(null);\n\n  const handleMapClick = ({ lngLat, leftButton }) => {\n    if (!leftButton) return;\n  }\n\n  return (\n    <main>\n      <ReactMapGL\n        width='100%'\n        // height=\"calc(100vh - 64px)\"\n        height=\"80vh\"\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoiYm5pa29tIiwiYSI6ImNrMHNxbjgwNjAxN2MzbnBlZXNnZ3Rtc2gifQ.PQbU0Gc9uGPX90rMxbJcaw\"\n        onViewportChange={({ width, height, ...etc}) => setViewport(etc)}\n        onClick={handleMapClick}\n        /* scrollZoom={!mobileSize} */\n        {...viewport}\n      >\n        <div className=\"navigation-control\">\n          <NavigationControl\n            onViewportChange={viewport => setViewport(viewport)}\n          />\n        </div>\n        {mapData.map(pin => (\n          <Marker\n            key={uuidv1()}\n            latitude={pin.latitude}\n            longitude={pin.longitude}\n            offsetLeft={-10}\n            offsetTop={-30}\n          >\n            <FontAwesomeIcon\n              icon=\"map-pin\"\n              size={\"2x\"}\n              color={\"red\"}\n              onClick={() => { setPin(pin); setShowPopup(true)}}\n              style={{ cursor: 'pointer' }}\n            />\n            \n          </Marker>\n        ))} \n        {showPopup &&\n          <Popup\n            latitude={pin.latitude}\n            longitude={pin.longitude}\n            closeButton={true}\n            closeOnClick={false}\n            onClose={() => setShowPopup(false)}\n            anchor=\"top\"\n            >\n            <div>\n              <p>{pin.city}, {pin.country}</p>\n              <img\n                src={pin.image}\n                className=\"travel-img\"\n                alt={`${pin.city}, ${pin.country}`}\n              />\n              <p>{pin.comments}</p>\n            </div>\n          </Popup>\n        }\n        \n      </ReactMapGL>\n\n    </main>\n  );\n};\n\nexport default TravelMap;"]},"metadata":{},"sourceType":"module"}