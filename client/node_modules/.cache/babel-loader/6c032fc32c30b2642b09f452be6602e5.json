{"ast":null,"code":"import _objectWithoutProperties from \"/Users/bnikom/Sites/personal-site/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/bnikom/Sites/personal-site/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bnikom/Sites/personal-site/client/src/components/TravelMap.jsx\";\nimport React, { useState } from 'react';\nimport ReactMapGL, { NavigationControl, Marker, Popup } from 'react-map-gl';\nimport uuidv1 from 'uuid/v1';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport mapData from '../mapData';\nconst INITIAL_VIEWPORT = {\n  latitude: 37.61859557982719,\n  longitude: -2.0274437500523406,\n  zoom: 1\n};\n\nconst TravelMap = () => {\n  const _useState = useState(INITIAL_VIEWPORT),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewport = _useState2[0],\n        setViewport = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showPopup = _useState4[0],\n        setShowPopup = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        pin = _useState6[0],\n        setPin = _useState6[1];\n\n  const handleMapClick = ({\n    lngLat,\n    leftButton\n  }) => {\n    if (!leftButton) return;\n\n    const _lngLat = _slicedToArray(lngLat, 2),\n          longitude = _lngLat[0],\n          latitude = _lngLat[1];\n\n    console.log(latitude, longitude);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ReactMapGL, Object.assign({\n    width: \"100%\",\n    height: \"calc(100vh - 64px)\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n    mapboxApiAccessToken: \"pk.eyJ1IjoiYm5pa29tIiwiYSI6ImNrMHNxbjgwNjAxN2MzbnBlZXNnZ3Rtc2gifQ.PQbU0Gc9uGPX90rMxbJcaw\",\n    onViewportChange: (_ref) => {\n      let width = _ref.width,\n          height = _ref.height,\n          etc = _objectWithoutProperties(_ref, [\"width\", \"height\"]);\n\n      return setViewport(etc);\n    },\n    onClick: handleMapClick\n    /* scrollZoom={!mobileSize} */\n\n  }, viewport, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"navigation-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(NavigationControl, {\n    onViewportChange: viewport => setViewport(viewport),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), mapData.map(pin => React.createElement(Marker, {\n    key: uuidv1(),\n    latitude: pin.latitude,\n    longitude: pin.longitude,\n    offsetLeft: -10,\n    offsetTop: -30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: \"map-pin\",\n    size: \"2x\",\n    color: \"red\",\n    onClick: () => {\n      setPin(pin);\n      setShowPopup(true);\n    },\n    style: {\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), showPopup && React.createElement(Popup, {\n    latitude: pin.latitude,\n    longitude: pin.longitude,\n    closeButton: true,\n    closeOnClick: false,\n    onClose: () => setShowPopup(false),\n    anchor: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, pin.city, \", \", pin.country), React.createElement(\"img\", {\n    src: pin.image,\n    className: \"travel-img\",\n    alt: \"\".concat(pin.city, \", \").concat(pin.country),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, pin.comments)))));\n};\n\nexport default TravelMap;","map":{"version":3,"sources":["/Users/bnikom/Sites/personal-site/client/src/components/TravelMap.jsx"],"names":["React","useState","ReactMapGL","NavigationControl","Marker","Popup","uuidv1","FontAwesomeIcon","mapData","INITIAL_VIEWPORT","latitude","longitude","zoom","TravelMap","viewport","setViewport","showPopup","setShowPopup","pin","setPin","handleMapClick","lngLat","leftButton","console","log","width","height","etc","map","cursor","city","country","image","comments"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactMapGL, { NavigationControl, Marker, Popup } from 'react-map-gl';\nimport uuidv1 from 'uuid/v1';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport mapData from '../mapData';\n\nconst INITIAL_VIEWPORT = {\n  latitude: 37.61859557982719,\n  longitude: -2.0274437500523406,\n  zoom: 1,\n}\n\nconst TravelMap = () => {\n  const [viewport, setViewport] = useState(INITIAL_VIEWPORT);\n  const [showPopup, setShowPopup] = useState(false);\n  const [pin, setPin] = useState(null);\n\n  const handleMapClick = ({ lngLat, leftButton }) => {\n    if (!leftButton) return;\n    const [longitude, latitude] = lngLat;\n    console.log(latitude, longitude)\n  }\n\n  return (\n    <>\n      <ReactMapGL\n        width='100%'\n        height=\"calc(100vh - 64px)\"\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoiYm5pa29tIiwiYSI6ImNrMHNxbjgwNjAxN2MzbnBlZXNnZ3Rtc2gifQ.PQbU0Gc9uGPX90rMxbJcaw\"\n        onViewportChange={({ width, height, ...etc}) => setViewport(etc)}\n        onClick={handleMapClick}\n        /* scrollZoom={!mobileSize} */\n        {...viewport}\n      >\n        <div className=\"navigation-control\">\n          <NavigationControl\n            onViewportChange={viewport => setViewport(viewport)}\n          />\n        </div>\n        {mapData.map(pin => (\n          <Marker\n            key={uuidv1()}\n            latitude={pin.latitude}\n            longitude={pin.longitude}\n            offsetLeft={-10}\n            offsetTop={-30}\n          >\n            <FontAwesomeIcon\n              icon=\"map-pin\"\n              size={\"2x\"}\n              color={\"red\"}\n              onClick={() => { setPin(pin); setShowPopup(true)}}\n              style={{ cursor: 'pointer' }}\n            />\n            \n          </Marker>\n        ))} \n        {showPopup &&\n          <Popup\n            latitude={pin.latitude}\n            longitude={pin.longitude}\n            closeButton={true}\n            closeOnClick={false}\n            onClose={() => setShowPopup(false)}\n            anchor=\"top\"\n            >\n            <div>\n              <p>{pin.city}, {pin.country}</p>\n              <img\n                src={pin.image}\n                className=\"travel-img\"\n                alt={`${pin.city}, ${pin.country}`}\n              />\n              <p>{pin.comments}</p>\n            </div>\n          </Popup>\n        }\n        \n      </ReactMapGL>\n\n    </>\n  );\n};\n\nexport default TravelMap;"]},"metadata":{},"sourceType":"module"}